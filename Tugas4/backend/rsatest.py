from typing import Tuple
def hex_to_int(hex_str: str) -> int:
    return int(hex_str, 16)
  
def rsa_encrypt(data_int: int, public_key_tuple: Tuple[int, int]) -> int:
        e, n = public_key_tuple
        ciphertext_int = pow(data_int, e, n)
        return ciphertext_int

def rsa_decrypt(encrypted_data_int: int, private_key_tuple: Tuple[int, int]) -> int:
        d, n = private_key_tuple
        
        plaintext_int = pow(encrypted_data_int, d, n)
        return plaintext_int

hashed = "0b22b535f3afe4ae64461d93bf514c8c6b8209708166f9a7b2669e7e350e2ee9"
hashed = hex_to_int(hashed)
signature = "49f8774084748647a8a9f580a009da9099f32d2d3c4104290c69085aa0b7ae0d581a37c0fbc862013bc1d455743cddfeb2cf5dd5be81cc6af4d24e209b1c1099a2170061398de27e0a4ef06c94cbfff4df5983ee9e8938d0b73b9eb30a400486fce982c4b7463434b6e211b41981086cf2ce77a7fa4ee65dcea17ffdf0c310c26d4a141de529b79934001e87d1a18b4500a75c185d4a597f3ae5d75ed0185bf5450d2b014035484c53db9eba234ccc64193f448a901c0668d73b4b6bd5b475d59bb2347c5c529c9b7e493a1cba6fecdad5fe8c4620c3a7d8e85736643ffdb1c5abbda01f1c1507cd1290df3364719ec18b1d9dc67cd68f8898066cc800fd041f"
signature = hex_to_int(signature)

e = 65537
n = 21173084500004858226392613164885959952305055318405159317219878409177167571085600866590869823669106114698226471669872267395885901593188020335588201937785646356909082517494683856257377599287585449062706875635475965666372164552688726727210086822964784664155007324396714294523643865558683990234392312702162256712051354060596587350414240622100422767441514714201406099740975888535538653647507884370131775818227347880763785729504933871530856865203452788102286356136469295349889887471613633250837104066910936894358360203939378714394251229588255638873246025547365910502883677200701840604747682703439294493492888042094029536239

pubKey = (e, n)
print(pubKey)
check = rsa_decrypt(signature, pubKey)
print(f"\nhasil rsa dekrip: {check}")
print(f"hashed: {hashed}")
if check == hashed:
    print("Signature is valid")

