from typing import Tuple
def hex_to_int(hex_str: str) -> int:
    return int(hex_str, 16)
  
def rsa_encrypt(data_int: int, public_key_tuple: Tuple[int, int]) -> int:
        e, n = public_key_tuple
        ciphertext_int = pow(data_int, e, n)
        return ciphertext_int

def rsa_decrypt(encrypted_data_int: int, private_key_tuple: Tuple[int, int]) -> int:
        d, n = private_key_tuple
        
        plaintext_int = pow(encrypted_data_int, d, n)
        return plaintext_int

hashed = "61311bb4f1b96ade8a6d76897a266b01cfbb5b03a9162e1684af87097edaefd9"
hashed = hex_to_int(hashed)
signature = "1d1224fb0770e303ac2e45ea8f1426707ea3eb2350ffd70c2cc0e77a6368b86f32d7db32484106b4128fa5729478cfe953e34d1aff907d2c8b4417bbdcceffbb42718881cfe1f2e46867577708002c29281fbbe3185f8e6dd0465d323514adfcb80b70ba284cd0849cbafde8851818b36361bff430ff67bf33cd93b6fb0999bda94bfe65d584d457b2603b32a29ec017a0ee7c38358344d40264a06b409e2392d89d5f01a7c9eaaebc0486265f2f5aca2e4f7bd2b48e8d04c0f6b9a26be9c67214298e746431c090adddd84647e65bd022b9d424f034b54e08b2b4c4464687e8d287994ba8ff8b2e2cfaa92486eeca835f8a756ebc78d5ebbf64273cee2cff7f"
signature = hex_to_int(signature)

e = 65537
n = 21173084500004858226392613164885959952305055318405159317219878409177167571085600866590869823669106114698226471669872267395885901593188020335588201937785646356909082517494683856257377599287585449062706875635475965666372164552688726727210086822964784664155007324396714294523643865558683990234392312702162256712051354060596587350414240622100422767441514714201406099740975888535538653647507884370131775818227347880763785729504933871530856865203452788102286356136469295349889887471613633250837104066910936894358360203939378714394251229588255638873246025547365910502883677200701840604747682703439294493492888042094029536239

pubKey = (e, n)
print(pubKey)
check = rsa_decrypt(signature, pubKey)
print(f"\nhasil rsa dekrip: {check}")
print(f"hashed: {hashed}")
if check == hashed:
    print("Signature is valid")

